//
//  PreviewProvider.swift
//  CryptoCoinAPI
import SwiftUI

extension PreviewProvider {
    // static -> 1 mal initalisiert
    static var dev: DeveloperPreview {
        return DeveloperPreview.instance
    }
}

class DeveloperPreview {
    static let instance = DeveloperPreview()
    
    let stat1 = StatisticModel(title: "Current Price",
                               value: "€21,543.00",
                               percentageChange: 1.23)
    
    let stat2 = StatisticModel(title: "Market Capitalization",
                               value: "€413.15Mrd",
                               percentageChange: 1.67)
    
    let stat3 = StatisticModel(title: "Rank",
                               value: "1",
                               percentageChange: nil)
    
    let stat4 = StatisticModel(title: "Volume",
                               value: "35.99Mrd",
                               percentageChange: nil)
    
    let sectionModel = CoinDetailSectionModel(title: "Overview",
                                              stats: [StatisticModel(title: "Current Price",
                                                                     value: "€21,543.00",
                                                                     percentageChange: 1.23),
                                                      StatisticModel(title: "Market Capitalization",
                                                                     value: "€413.15Mrd",
                                                                     percentageChange: 1.67),
                                                      StatisticModel(title: "Rank",
                                                                     value: "1",
                                                                     percentageChange: nil),
                                                      StatisticModel(title: "Volume",
                                                                     value: "35.99Mrd",
                                                                     percentageChange: nil)])
    
    // test zahlen -> neu generieren und einfügen
    
    let coin: Coin = {
        let json: String = """
    {
    "id": "bitcoin",
        "symbol": "btc",
        "name": "Bitcoin",
        "image": "https://assets.coingecko.com/coins/images/1/large/bitcoin.png?1547033579",
        "current_price": 25291,
        "market_cap": 489769050442,
        "market_cap_rank": 1,
        "fully_diluted_valuation": 530304353613,
        "total_volume": 20341748671,
        "high_24h": 25413,
        "low_24h": 23839,
        "price_change_24h": 1417.44,
        "price_change_percentage_24h": 5.93733,
        "market_cap_change_24h": 27351039585,
        "market_cap_change_percentage_24h": 5.91479,
        "circulating_supply": 19394806,
        "total_supply": 21000000,
        "max_supply": 21000000,
        "ath": 59717,
        "ath_change_percentage": -57.72014,
        "ath_date": "2021-11-10T14:24:11.849Z",
        "atl": 51.3,
        "atl_change_percentage": 49118.27194,
        "atl_date": "2013-07-05T00:00:00.000Z",
        "roi": null,
        "last_updated": "2023-06-06T21:47:29.048Z",
        "sparkline_in_7d": {
          "price": [
            27772.448288507625,
            27749.552559606713,
            27825.397379514598,
            27817.634220587304,
            27692.175935439547,
            27739.121436750815,
            27713.908547529507,
            27769.421162357088,
            27776.019706296476,
            27673.216299185013,
            27681.43929087716,
            27436.586086212115,
            27059.232120251534,
            27156.742145800403,
            27180.136768945868,
            27166.983886407186,
            27112.807861001245,
            27077.244222389156,
            27121.96627372488,
            27104.53102654332,
            27186.385753704006,
            27062.0992593161,
            26904.426878141723,
            26922.76504443878,
            27059.13996997633,
            27047.277602394366,
            27056.85931506738,
            27103.994827563725,
            27063.70359717831,
            27164.099322842958,
            27245.474465179723,
            27076.016711288634,
            27120.81114337739,
            26704.4574355,
            26783.578776358107,
            26800.568368362852,
            26849.69263082753,
            26823.442658116517,
            26807.385959948035,
            26886.894958380024,
            26931.370253907062,
            26878.097332602098,
            26884.495348438115,
            26949.82406122962,
            26923.887606882687,
            26899.36914117065,
            26904.518027473227,
            26908.714227708,
            26960.71942976414,
            26998.12766421531,
            26827.298450386817,
            26860.683060754607,
            26883.56850173693,
            26883.342589182903,
            26824.10149951678,
            26728.399984314823,
            26828.25028601785,
            26955.968165337228,
            26949.93769093436,
            27100.29073348232,
            27170.18568424427,
            27142.583673221983,
            27102.493957279436,
            27139.86455879361,
            27106.055961554932,
            27076.265135141974,
            27139.835494152383,
            27075.73616650754,
            27076.91054311022,
            26952.08830835507,
            27066.66418124623,
            27056.04738346177,
            27069.05441164804,
            27134.77096148262,
            27250.604994345547,
            27206.27305427099,
            27223.179022546126,
            27286.534285772817,
            27247.74008145703,
            27180.308306696177,
            27145.384906822495,
            27144.646503357304,
            27151.053560717708,
            27160.254656081794,
            27155.605142161774,
            27184.5633905634,
            27179.144313670033,
            27164.49457602959,
            27141.71837032281,
            27144.298529304502,
            27146.169094800298,
            27178.518904765868,
            27178.677778476587,
            27207.942773435574,
            27218.859620612686,
            27267.802571292104,
            27154.662598607054,
            27173.51126961266,
            27145.125171040367,
            27105.24630245761,
            27008.520824584848,
            27066.371328526235,
            27083.973063237852,
            27048.46264518669,
            27063.412897067577,
            27070.78916746346,
            27066.86806475895,
            27060.808020735072,
            27043.07801033908,
            27128.005380663784,
            27139.98683629735,
            27155.052101201683,
            27218.988494314017,
            27222.590535322626,
            27200.070563322202,
            27216.389065765317,
            27249.038658206373,
            27243.966729628184,
            27211.54340139385,
            27190.535814058945,
            27197.565015767483,
            27196.880944808752,
            27221.36279144891,
            27250.088821889836,
            27196.56765646848,
            27315.447587487684,
            27156.376921902993,
            27059.63465508299,
            27062.14664324447,
            26949.71662498153,
            26872.32134364832,
            26823.960774036153,
            26817.563415880926,
            26783.557757017683,
            26830.14424419935,
            26800.655787128067,
            26774.509959949897,
            26742.356084994935,
            26787.784099762204,
            26681.229292343043,
            26736.89967175026,
            26785.303434190868,
            26399.95267899295,
            25798.011797091844,
            25738.52940462083,
            25608.041758631272,
            25590.65872519297,
            25614.966845184957,
            25625.341788241403,
            25719.81405485019,
            25792.6160902334,
            25721.37549099434,
            25638.202990456826,
            25757.893050779738,
            25738.26626767259,
            25794.14732693816,
            25766.984558404216,
            25775.039496365633,
            25766.80343108237,
            25715.169602827606,
            25759.425238355037,
            25784.466477316426,
            25681.284445730977,
            25586.943804382678,
            25658.169914339072,
            25993.834767324053,
            26044.9662995549,
            26304.198382831095
    ]
    },
    "price_change_percentage_24h_in_currency": 0.7293422293777992
    }
    """
        let data = json.data(using: .utf8)!
        return try! JSONDecoder().decode(Coin.self, from: data)
    }()
}
